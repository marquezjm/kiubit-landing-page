/* You can add global styles to this file, and also import other style files */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;

    font-family: "Nunito", sans-serif;
    font-optical-sizing: auto;
    font-weight: 400;
    font-style: normal;
}

/* Prevenir scroll horizontal y asegurar ancho completo */
html,
body {
    width: 100%;
    overflow-x: hidden;
}

body {
    min-width: 320px;
    /* Ancho m√≠nimo para dispositivos muy peque√±os */
}


:root {
    /* üé® Colores principales */
    --color-primary: #38C0DA;
    /* TU color base */
    --color-on-primary: #FFFFFF;

    --color-secondary: #2E6E71;
    /* complementario / neutro azulado */
    --color-on-secondary: #FFFFFF;

    --color-tertiary: #3D7A4F;
    /* acento verde */
    --color-on-tertiary: #FFFFFF;

    /* üß± Fondo y superficies */
    --color-background: #F8FAFB;
    /* fondo general claro */
    --color-on-background: #1B1C1D;
    /* texto principal sobre background */

    --color-surface: #FFFFFF;
    /* tarjetas, paneles */
    --color-on-surface: #1B1C1D;

    --color-surface-variant: #E6F7FA;
    /* variante sutil ligada al primary */
    --color-on-surface-variant: #15393D;

    /* üß≠ Bordes y separadores */
    --color-outline: #8AAEB2;

    /* üí¨ Estados (feedback) */
    --color-error: #B3261E;
    --color-on-error: #FFFFFF;

    --color-success: #0F9D58;
    --color-warning: #F9A825;
    --color-info: #0288D1;

    /* ‚ö™ Colores b√°sicos */
    --color-black: #000000;
    --color-white: #FFFFFF;
    --color-gray-light: #E0E0E0;
    --color-gray-lightest: #F5F5F5;
    --color-gray: #9E9E9E;
    --color-gray-dark: #424242;
}

/* Tema oscuro: estos valores sobrescriben las variables para modo oscuro */
@media (prefers-color-scheme: dark) {
    :root {
        --color-primary: #82D3E5;
        /* versi√≥n clara del primary para dark mode */
        --color-on-primary: #00323a;

        --color-secondary: #A8D7DA;
        --color-on-secondary: #0F2D30;

        --color-tertiary: #A3D0A9;
        --color-on-tertiary: #072914;

        --color-background: #121314;
        --color-on-background: #E1E2E3;

        --color-surface: #1C1D1E;
        --color-on-surface: #E1E2E3;

        --color-surface-variant: #254044;
        --color-on-surface-variant: #CFEFF3;

        --color-outline: #5E6A6C;

        --color-error: #FFB4A9;
        --color-on-error: #680003;

        --color-success: #81C784;
        --color-warning: #FFD54F;
        --color-info: #4FC3F7;

        --color-black: #000000;
        --color-white: #FFFFFF;
        --color-gray-light: #2E3233;
        --color-gray: #9BA3A3;
        --color-gray-dark: #D1D5D6;
    }
}

/* üìù Utilidades de tipograf√≠a */
.font-light {
    font-weight: 300;
}

.font-regular {
    font-weight: 400;
}

.font-medium {
    font-weight: 500;
}

.font-semibold {
    font-weight: 600;
}

.font-bold {
    font-weight: 700;
}

.font-extrabold {
    font-weight: 800;
}

.font-black {
    font-weight: 900;
}

// Escala tipogr√°fica (rem)
$fs-xxs: 0.625rem; // 10px
$fs-xs: 0.75rem; // 12px
$fs-sm: 0.875rem; // 14px
$fs-base: 1rem; // 16px
$fs-lg: 1.125rem; // 18px
$fs-xl: 1.25rem; // 20px
$fs-2xl: 1.5rem; // 24px
$fs-3xl: 1.875rem; // 30px
$fs-4xl: 2.25rem; // 36px
$fs-5xl: 3rem; // 48px
$fs-6xl: 3.75rem; // 60px
$fs-7xl: 4.5rem; // 72px
$fs-8xl: 6rem; // 96px



// Valores comunes
$lh-tight: 1.1;
$lh-normal: 1.4;
$lh-relaxed: 1.6;
$letter-tight: -0.01em;
$letter-normal: 0;
$letter-wide: 0.02em;

// Clases sencillas para tama√±os de letra
.text-xxs {
    font-size: $fs-xxs;
    line-height: $lh-normal;
    letter-spacing: $letter-normal;
}

.text-xs {
    font-size: $fs-xs;
    line-height: $lh-normal;
    letter-spacing: $letter-normal;
}

.text-sm {
    font-size: $fs-sm;
    line-height: $lh-normal;
    letter-spacing: $letter-normal;
}

.text-base {
    font-size: $fs-base;
    line-height: $lh-normal;
    letter-spacing: $letter-normal;
}

.text-lg {
    font-size: $fs-lg;
    line-height: $lh-normal;
    letter-spacing: $letter-tight;
}

.text-xl {
    font-size: $fs-xl;
    line-height: $lh-tight;
    letter-spacing: $letter-tight;
}

.text-2xl {
    font-size: $fs-2xl;
    line-height: $lh-tight;
    letter-spacing: $letter-tight;
    font-weight: 600;
}

.text-3xl {
    font-size: $fs-3xl;
    line-height: $lh-tight;
    letter-spacing: $letter-tight;
    font-weight: 700;
}

.text-4xl {
    font-size: $fs-4xl;
    line-height: $lh-tight;
    letter-spacing: $letter-tight;
    font-weight: 700;
}

.text-5xl {
    font-size: $fs-5xl;
    line-height: $lh-tight;
    letter-spacing: $letter-tight;
    font-weight: 800;
}

.text-6xl {
    font-size: $fs-6xl;
    line-height: $lh-tight;
    letter-spacing: $letter-tight;
    font-weight: 800;
}

.text-7xl {
    font-size: $fs-7xl;
    line-height: $lh-tight;
    letter-spacing: $letter-tight;
    font-weight: 900;
}

.text-8xl {
    font-size: $fs-8xl;
    line-height: $lh-tight;
    letter-spacing: $letter-tight;
    font-weight: 900;
}

// Variante fluida para encabezados que se adapta al ancho
.text-fluid {
    font-size: clamp(1.125rem, 1rem + 1.5vw, 2.25rem);
    line-height: 1.15;
    letter-spacing: $letter-tight;
}

// Utilidades peque√±as y convenientes
.text-uppercase {
    text-transform: uppercase;
    letter-spacing: 0.08em;
}

.text-capitalize {
    text-transform: capitalize;
}

.text-muted {
    color: var(--color-gray);
}

// Utilidades de padding (espaciado)
$space-scale: (
    0: 0,
    1: 0.25rem,
    // 4px
    2: 0.5rem,
    // 8px
    3: 0.75rem,
    // 12px
    4: 1rem,
    // 16px
    5: 1.5rem,
    // 24px
    6: 2rem,
    // 32px
    7: 3rem,
    // 48px
    8: 4rem,
    // 64px
    9: 5rem,
    // 80px
    10: 6rem,
    // 96px
    11: 7rem,
    // 112px
    12: 8rem,
    // 128px
    13: 9rem,
    // 144px
    14: 10rem,
    // 160px
    15: 12rem,
    // 192px
    16: 14rem,
    // 224px
    17: 16rem,
    // 256px
    18: 18rem,
    // 288px
    19: 20rem,
    // 320px
    20: 24rem // 384px
);

@each $key, $value in $space-scale {
    .p-#{$key} {
        padding: $value !important;
    }

    .pt-#{$key} {
        padding-top: $value !important;
    }

    .pr-#{$key} {
        padding-right: $value !important;
    }

    .pb-#{$key} {
        padding-bottom: $value !important;
    }

    .pl-#{$key} {
        padding-left: $value !important;
    }

    .px-#{$key} {
        padding-left: $value !important;
        padding-right: $value !important;
    }

    .py-#{$key} {
        padding-top: $value !important;
        padding-bottom: $value !important;
    }
}

// Breakpoints y anchos m√°ximos tipo Bootstrap (ajustables)
$breakpoints: (
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px,
    xxl: 1400px
);

$container-max-widths: (
    sm: 540px,
    md: 720px,
    lg: 960px,
    xl: 1140px,
    xxl: 1320px
);

// Padding horizontal por defecto para container
$container-padding-x: 1rem;

// Container √∫nico (centrado y con padding lateral). Su max-width cambia seg√∫n el viewport.
.container {
    width: 100%;
    padding-left: $container-padding-x;
    padding-right: $container-padding-x;
    margin-left: auto;
    margin-right: auto;
    box-sizing: border-box;
    max-width: 100%; // por defecto en dispositivos peque√±os

    // Asegurar que nunca exceda el viewport
    min-width: 0;
}

// Container fluido (opcional, siempre 100%)
.container-fluid {
    width: 100% !important;
    padding-left: $container-padding-x;
    padding-right: $container-padding-x;
    margin-left: 0;
    margin-right: 0;
    box-sizing: border-box;
    min-width: 0;
}

// Aplicar max-width responsivo en cada breakpoint para el mismo .container
@each $name, $min in $breakpoints {
    $max: map-get($container-max-widths, $name);

    @media (min-width: $min) {
        .container {
            max-width: $max;
        }
    }
}

// Media queries adicionales para dispositivos muy peque√±os
@media (max-width: 575px) {
    .container {
        padding-left: 0.75rem; // Reducir padding en m√≥viles
        padding-right: 0.75rem;
        max-width: 100vw; // Asegurar que use todo el viewport
    }
}

@media (max-width: 375px) {
    .container {
        padding-left: 0.5rem; // Padding a√∫n menor para dispositivos muy peque√±os
        padding-right: 0.5rem;
    }
}

// Utilidades adicionales para prevenir problemas de ancho
.w-full {
    width: 100% !important;
}

.min-w-0 {
    min-width: 0 !important;
}

.overflow-x-hidden {
    overflow-x: hidden !important;
}

// Clases responsivas para texto en m√≥viles
@media (max-width: 575px) {
    .text-7xl {
        font-size: $fs-4xl;
    }

    // Reducir tama√±o de t√≠tulos en m√≥viles
    .text-6xl {
        font-size: $fs-3xl;
    }

    .text-5xl {
        font-size: $fs-2xl;
    }

    .text-4xl {
        font-size: $fs-xl;
    }
}

/* Centrar texto horizontalmente */
.text-center {
    text-align: center;
}

/* Variante con !important para sobrescribir estilos inline o espec√≠ficos */
.text-center-important {
    text-align: center !important;
}

// Clases utilitarias para colores de texto basadas en las variables de :root
$kiubit-text-colors: (
    "primary": --color-primary,
    "on-primary": --color-on-primary,
    "secondary": --color-secondary,
    "on-secondary": --color-on-secondary,
    "tertiary": --color-tertiary,
    "on-tertiary": --color-on-tertiary,
    "background": --color-background,
    "on-background": --color-on-background,
    "surface": --color-surface,
    "on-surface": --color-on-surface,
    "surface-variant": --color-surface-variant,
    "on-surface-variant": --color-on-surface-variant,
    "outline": --color-outline,
    "error": --color-error,
    "on-error": --color-on-error,
    "success": --color-success,
    "warning": --color-warning,
    "info": --color-info,
    "black": --color-black,
    "white": --color-white,
    "gray-light": --color-gray-light,
    "gray-lightest": --color-gray-lightest,
    "gray": --color-gray,
    "gray-dark": --color-gray-dark
);

// Genera .text-{name} y .text-{name}-important
@each $name, $var in $kiubit-text-colors {
    .text-#{$name} {
        color: var(#{$var});
    }

    // Variante con !important para casos donde hay que sobrescribir estilos inline o espec√≠ficos
    .text-#{$name}-important {
        color: var(#{$var}) !important;
    }

    // Variante para hover/focus que puede usarse en elementos interactivos
    .hover\:text-#{$name}:hover,
    .focus\:text-#{$name}:focus {
        color: var(#{$var});
    }
}

// Atajos: colores sem√°nticos comunes
.text-primary {
    @extend .text-primary;
}

.text-secondary {
    @extend .text-secondary;
}

.text-tertiary {
    @extend .text-tertiary;
}

.text-muted {
    color: var(--color-gray);
}

// Utilidades de fondo basadas en las variables de :root (genera .bg-{name}, .bg-{name}-important y variantes hover/focus)
@each $name, $var in $kiubit-text-colors {
    .bg-#{$name} {
        background-color: var(#{$var});
    }

    .bg-#{$name}-important {
        background-color: var(#{$var}) !important;
    }

    .hover\:bg-#{$name}:hover,
    .focus\:bg-#{$name}:focus {
        background-color: var(#{$var});
    }
}

// Utilidad com√∫n para transparentar fondos
.bg-transparent {
    background-color: transparent !important;
}

// Sistema de botones configurable
.btn {
    // Estilos base comunes a todos los botones
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-family: inherit;
    font-weight: 500;
    text-decoration: none;
    text-align: center;
    transition: all 0.3s ease;
    white-space: nowrap;
    user-select: none;
    // Tama√±o por defecto: md
    padding: 12px 20px;
    font-size: 1rem;
    
    &:disabled {
        opacity: 0.5;
        cursor: not-allowed;
        pointer-events: none;
    }

    // Variantes de estilo
    &--primary {
        background-color: var(--color-primary);
        color: var(--color-on-primary);
        
        &:hover:not(:disabled) {
            background-color: rgb(from var(--color-primary) r g b / 0.9);
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgb(from var(--color-primary) r g b / 0.3);
        }
        
        &:active {
            transform: translateY(0);
        }
    }

    &--secondary {
        background-color: var(--color-secondary);
        color: var(--color-on-secondary);
        
        &:hover:not(:disabled) {
            background-color: rgb(from var(--color-secondary) r g b / 0.9);
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgb(from var(--color-secondary) r g b / 0.3);
        }
        
        &:active {
            transform: translateY(0);
        }
    }

    &--outline {
        background-color: transparent;
        color: var(--color-primary);
        border: 2px solid var(--color-primary);
        
        &:hover:not(:disabled) {
            background-color: var(--color-primary);
            color: var(--color-on-primary);
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgb(from var(--color-primary) r g b / 0.3);
        }
        
        &:active {
            transform: translateY(0);
        }
    }

    &--ghost {
        background-color: transparent;
        color: var(--color-primary);
        
        &:hover:not(:disabled) {
            background-color: var(--color-surface-variant);
            transform: translateY(-1px);
        }
        
        &:active {
            transform: translateY(0);
        }
    }

    &--danger {
        background-color: var(--color-error);
        color: var(--color-on-error);
        
        &:hover:not(:disabled) {
            background-color: rgb(from var(--color-error) r g b / 0.9);
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgb(from var(--color-error) r g b / 0.3);
        }
        
        &:active {
            transform: translateY(0);
        }
    }

    &--success {
        background-color: var(--color-success);
        color: var(--color-white);
        
        &:hover:not(:disabled) {
            background-color: rgb(from var(--color-success) r g b / 0.9);
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgb(from var(--color-success) r g b / 0.3);
        }
        
        &:active {
            transform: translateY(0);
        }
    }

    &--neutral {
        background-color: var(--color-gray-light);
        color: var(--color-gray-dark);
        
        &:hover:not(:disabled) {
            background-color: var(--color-gray);
            color: var(--color-white);
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }
        
        &:active {
            transform: translateY(0);
        }
    }

    // Variantes de tama√±o
    &--xs {
        padding: 6px 12px;
        font-size: 0.75rem;
        border-radius: 3px;
    }

    &--sm {
        padding: 8px 16px;
        font-size: 0.875rem;
    }

    &--md {
        padding: 12px 20px;
        font-size: 1rem;
    }

    &--lg {
        padding: 16px 28px;
        font-size: 1.125rem;
        border-radius: 6px;
    }

    &--xl {
        padding: 20px 36px;
        font-size: 1.25rem;
        border-radius: 8px;
    }

    // Modificadores especiales
    &--full {
        width: 100%;
    }

    &--rounded {
        border-radius: 50px;
    }

    &--square {
        border-radius: 0;
    }

    &--icon {
        aspect-ratio: 1;
        padding: 12px;
        
        &.btn--xs { padding: 6px; }
        &.btn--sm { padding: 8px; }
        &.btn--md { padding: 12px; }
        &.btn--lg { padding: 16px; }
        &.btn--xl { padding: 20px; }
    }
}

// Clase de compatibilidad para mantener el bot√≥n existente
.boton {
    @extend .btn, .btn--primary, .btn--md;
}